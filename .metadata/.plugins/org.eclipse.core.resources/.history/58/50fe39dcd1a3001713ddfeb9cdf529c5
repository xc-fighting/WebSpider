package csci572hw2.webcrawler;

import java.io.File;

import java.util.regex.Pattern;



import edu.uci.ics.crawler4j.crawler.Page;
import edu.uci.ics.crawler4j.crawler.WebCrawler;


import edu.uci.ics.crawler4j.url.WebURL;

public class MyCrawler extends WebCrawler{

	
	
	 private final static Pattern FILTERS = Pattern.compile(".*(\\.(css|js|mid|mp2|mp3|mp4|wav|avi|mov|mpeg|ram|m4v"+
        "|rm|smil|wmv|swf|wma|zip|rar|gz|txt))$");
//	 private final static Pattern visitPatterns=Pattern.compile( ".*(\\.(doc|pdf|bmp|gif|jpe?g|png|tiff?))$");
     
	 private static File storageFolder;
	 private static String[] crawlDomains;
	 
	 public static void configure(String[] domain,String folderName){
		 crawlDomains=domain;
		 storageFolder=new File(folderName);
		 if(storageFolder.exists()==false){
			 storageFolder.mkdirs();
		 }
	 }
	 @Override
	  protected void handlePageStatusCode(WebURL webUrl, int statusCode, String statusDescription) {
		   System.out.println("handling all of the url it want to fetch");
		   String input=webUrl.getURL()+","+statusCode;
		   System.out.println(input);
		   FileUtil.WriteToFetchFile(input);
	   }

		@Override
		public boolean shouldVisit(Page referringPage, WebURL url) {
			System.out.println("judging for the validation of current page's children");
			String href = url.getURL();
			for(String domain:crawlDomains){
				//judge whether the url inside the domain
				//if yes
		    	if(href.startsWith(domain)){
		    		//if the url inside the domain,then judege if it is valid for visit
		    		if(FILTERS.matcher(href).matches()){
				    	return false;
				    }
		    		else{
		    			return true;
		    		}
		    		
		    	}
		    }
		    //for the condistion when the url is not inside the domain
		    return false;
		}
		
		/**
		* This function is called when a page is fetched and ready
		* to be processed by your program.
		*/
		@Override
		public void visit(Page page)  {
			System.out.println("visiting page in queue");
			
			String url = page.getWebURL().getURL();
			int NumberOfLinks=page.getParseData().getOutgoingUrls().size();
			String type=page.getContentType();
			int contentLength=page.getContentData().length;
			String input=url+","+contentLength+","+NumberOfLinks+","+type+","+page.getStatusCode();
			FileUtil.WriteToVistitFile(input);
		
		}

}
